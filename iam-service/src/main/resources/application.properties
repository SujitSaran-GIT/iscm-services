# ========== Server / Context Path ==========
server.port = 8081
server.servlet.context-path = /iam

# ========== Application Name ==========
spring.application.name = iam-service

# ========== Datasource / PostgreSQL / Hikari ==========
spring.datasource.url = jdbc:postgresql://localhost:5432/iscm_iam
spring.datasource.username = ${DB_USERNAME:postgres}
spring.datasource.password = ${DB_PASSWORD:Saran@2002}
spring.datasource.driver-class-name = org.postgresql.Driver

spring.datasource.hikari.maximum-pool-size = 10
spring.datasource.hikari.minimum-idle = 2
spring.datasource.hikari.connection-timeout = 30000
spring.datasource.hikari.idle-timeout = 600000
spring.datasource.hikari.max-lifetime = 1800000

# ========== JPA / Hibernate ==========
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = false
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation = true

# ========== Liquibase (migrations) ==========
spring.liquibase.change-log = classpath:db/changelog/db.changelog.master.yaml
spring.liquibase.enabled = true

# ========== Redis (if used) ==========
spring.data.redis.host = ${REDIS_HOST:localhost}
spring.data.redis.port = ${REDIS_PORT:6379}

# ========== Mail settings ==========
spring.mail.host = ${MAIL_HOST:localhost}
spring.mail.port = ${MAIL_PORT:1025}
spring.mail.properties.mail.smtp.auth = false
spring.mail.properties.mail.smtp.starttls.enable = false

# ========== JWT & Security ==========
app.jwt.secret = ${JWT_SECRET:mySuperSecretKeyThatIsAtLeast32CharactersLong123!}
app.jwt.expiration.access = 900
app.jwt.expiration.refresh = 604800

app.security.max-login-attempts = 5
app.security.account-lock-duration-minutes = 30

# ========== OAuth Configuration ==========
app.oauth.google.client-id = ${GOOGLE_CLIENT_ID:placeholder-client-id}
app.oauth.google.client-secret = ${GOOGLE_CLIENT_SECRET:placeholder-client-secret}
app.oauth.google.redirect-uri = ${GOOGLE_REDIRECT_URI:http://localhost:8081/iam/api/v1/oauth/google/callback}

app.oauth.microsoft.client-id = ${MICROSOFT_CLIENT_ID:placeholder-client-id}
app.oauth.microsoft.client-secret = ${MICROSOFT_CLIENT_SECRET:placeholder-client-secret}
app.oauth.microsoft.redirect-uri = ${MICROSOFT_REDIRECT_URI:http://localhost:8081/iam/api/v1/oauth/microsoft/callback}

app.oauth.linkedin.client-id = ${LINKEDIN_CLIENT_ID:placeholder-client-id}
app.oauth.linkedin.client-secret = ${LINKEDIN_CLIENT_SECRET:placeholder-client-secret}
app.oauth.linkedin.redirect-uri = ${LINKEDIN_REDIRECT_URI:http://localhost:8081/iam/api/v1/oauth/linkedin/callback}

# ========== Fraud Detection ==========
app.fraud.service.url = ${FRAUD_SERVICE_URL:http://localhost:8082}

# ========== MFA Configuration ==========
app.mfa.totp.window-size = 3
app.mfa.backup-codes.count = 10

# ========== Device Management ==========
app.device.max-trusted-devices = 5

# ========== Logging ==========
logging.level.com.iscm = DEBUG
logging.level.org.springframework.security = INFO
logging.level.org.hibernate.SQL = WARN
logging.pattern.console = %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ========== Actuator / Management ==========
management.endpoints.web.exposure.include = health,info,metrics,prometheus
management.endpoints.web.base-path = /actuator
management.endpoint.health.show-details = always
management.endpoint.health.show-components = always
management.endpoint.metrics.enabled = true
management.endpoint.prometheus.enabled = true

# ========== Springdoc / OpenAPI ==========
springdoc.api-docs.path = /v3/api-docs
springdoc.swagger-ui.path = /swagger-ui.html
springdoc.swagger-ui.operations-sorter = method
springdoc.swagger-ui.tags-sorter = alpha
